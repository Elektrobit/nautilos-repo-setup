#!/bin/bash
# Copyright (c) 2022 Elektrobit Automotive GmbH
#
# This file is part of nautilos-repo-setup.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
set -e

declare -a credentials
declare -a descriptions
declare -x target_dir

export TERM=xterm

A_MACHINE="artifactory.elektrobit.com"
A_DIST="eb_corbos_linux_nautilos2.0-debian-remote"
DISTPATH="/var/tmp/nautilos/${A_MACHINE}/${A_DIST}"

function setup_container_sdk {
    local repo_location=$1
    if [ "${repo_location}" = "local_repos" ];then
        if [ -d "${DISTPATH}" ];then
            sudo ebcl-repo-setup --local "${DISTPATH}"
        else
            whiptail --msgbox "No local repos available, mirror first !" 7 60
            return
        fi
    else
        get_credentials
        sudo ebcl-repo-setup --production \
            --user "${credentials[0]}" --password "${credentials[1]}"
    fi

    sudo apt --yes install reference-image-description-crinit
    sudo apt --yes install reference-image-description-jammy

    sudo apt --yes install oci-pilot
    sudo apt --yes install nautilos-builder-oci-flake

    if [ "$(arch)" = "x86_64" ];then
        sudo podman run --rm --privileged \
            docker.io/multiarch/qemu-user-static --reset -p yes
        sudo apt --yes -o Dpkg::Options::="--force-architecture" \
            install elektrobit-arm64-sdk-image:arm64
    fi
}

function build_image {
    local image_description=$1
    local repo_location=$2
    local repo_server
    target_dir="/var/tmp/image"
    if [ "${repo_location}" = "local_repos" ];then
        repo_server="dir://${DISTPATH}"
    else
        get_credentials
        repo_server="https://${credentials[0]}:${credentials[1]}@${A_MACHINE}/${A_DIST}"
    fi

    if [[ ${image_description} =~ /nxp ]];then
        ebcl_build=ebcl-build-arm64
    else
        ebcl_build=ebcl-build-amd64
    fi
    ebcl_build="$ebcl_build --target-dir ${target_dir}"
    ebcl_build="$ebcl_build --description ${image_description}"
    ebcl_build="$ebcl_build --repo-server ${repo_server}"
    ebcl_build="$ebcl_build --dist-prefix none --local --clean"
    if [[ ${image_description} =~ reference-image-description-crinit ]];then
        ebcl_build="$ebcl_build --profile RO"
        target_dir="${target_dir}.RO"
    fi
    # shellcheck disable=SC2086
    sudo $ebcl_build
}

function get_image_descriptions_for_selection {
    local selected=on
    echo -n "descriptions=( "
    pushd /usr/share/kiwi/nautilos/ &>/dev/null
    find . -maxdepth 3 -name build -print0 | \
    while read -r -d $'\0' build; do
        desc=$(dirname "${build}" | cut -f2- -d '/')
        echo -n "${desc} \"\" ${selected} "
        selected=off
    done
    echo ")"
    popd &>/dev/null
}

function get_credentials {
    local user="${credentials[0]}"
    local secret="${credentials[1]}"
    if [ -z "${user}" ] && [ -z "${secret}" ];then
        user=$(
            whiptail --passwordbox "Enter Artifactory User Name:" 8 60 \
            3>&1 1>&2 2>&3
        )
        secret=$(
            whiptail --passwordbox "Enter Artifactory Password:" 8 60 \
            3>&1 1>&2 2>&3
        )
    fi
    eval "credentials=( \"${user}\" \"${secret}\" )"
}

function install_nautilos_repo_setup {
    if [ -d ${DISTPATH} ];then
        # shellcheck disable=SC2086
        sudo dpkg --install \
            ${DISTPATH}/release/xUbuntu_22.04_debbuild/all/nautilos-repo-setup*
    else
        get_credentials
        # shellcheck disable=SC2086
        wget --user "${credentials[0]}" --password "${credentials[1]}" \
            --recursive --no-directories --no-parent -A 'nautilos-repo-setup*.deb' \
            https://${A_MACHINE}/${A_DIST}/release/xUbuntu_22.04_debbuild/all/
        # shellcheck disable=SC2012
        sudo dpkg --install "$(ls -1t nautilos-repo-setup* | head -n1)"
    fi
}

function create_update_local_repo_mirror {
    get_credentials
    if [ ! -e "/usr/bin/ebcl-sync" ];then
        install_nautilos_repo_setup
    fi
    sudo ebcl-sync --user "${credentials[0]}" --password "${credentials[1]}"
}

# main
if ! whiptail --version;then
    echo "whiptail not found, run 'sudo apt install whiptail'"
    exit 1
fi

# main loop
while true;do
    menu_selection=$(
        whiptail --menu "EBCL SDK" 15 50 5 \
            "1" "Create/Update Local Repository Mirror" \
            "2" "Run SDK Setup" \
            "3" "Build Reference Image(s)" \
            "4" "Exit" \
            3>&1 1>&2 2>&3
    )
    case "${menu_selection}" in
        1)
            create_update_local_repo_mirror
            ;;
        2)
            if [ ! -e "/usr/bin/ebcl-repo-setup" ];then
                install_nautilos_repo_setup
            fi
            if [ -z "$(ls -1 /usr/bin/ebcl-build* 2>/dev/null)" ];then
                if [ -d "${DISTPATH}" ];then
                    setup_container_sdk "local_repos"
                else
                    setup_container_sdk "remote_repos"
                fi
            else
                whiptail --msgbox "SDK already configured" 7 60
            fi
            ;;
        3)
            if [ -z "$(ls -1 /usr/bin/ebcl-build* 2>/dev/null)" ];then
                whiptail --msgbox "SDK not configured, run SDK Setup first !" 7 60
            else
                eval "$(get_image_descriptions_for_selection)"
                if [ -n "${descriptions[*]}" ];then
                    image_description=$(
                        whiptail --radiolist \
                            "Select Image Description:" 20 78 10 "${descriptions[@]}" \
                            3>&1 1>&2 2>&3
                    )
                    image_description="/usr/share/kiwi/nautilos/${image_description}"
                    if [ -d "${image_description}" ];then
                        if [ -d "${DISTPATH}" ];then
                            build_image "${image_description}" "local_repos"
                        else
                            build_image "${image_description}" "remote_repos"
                        fi
                        for result in "${target_dir}"/*.raw;do
                            whiptail --msgbox "${result}" --title "Image Binary" 8 78
                            break
                        done
                    fi
                else
                    whiptail --msgbox "No image description(s) found" 7 60
                fi
            fi
            ;;
        4)
            exit 0
            ;;
        *)
            exit 1
            ;;
    esac
done
